// +build !ignore_autogenerated

/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1beta1

import (
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	miskatonic "k8s.io/apiserver-builder/example/pkg/apis/miskatonic"
	unsafe "unsafe"
)

func init() {
	SchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1beta1_Scale_To_miskatonic_Scale,
		Convert_miskatonic_Scale_To_v1beta1_Scale,
		Convert_v1beta1_ScaleList_To_miskatonic_ScaleList,
		Convert_miskatonic_ScaleList_To_v1beta1_ScaleList,
		Convert_v1beta1_University_To_miskatonic_University,
		Convert_miskatonic_University_To_v1beta1_University,
		Convert_v1beta1_UniversityList_To_miskatonic_UniversityList,
		Convert_miskatonic_UniversityList_To_v1beta1_UniversityList,
		Convert_v1beta1_UniversitySpec_To_miskatonic_UniversitySpec,
		Convert_miskatonic_UniversitySpec_To_v1beta1_UniversitySpec,
		Convert_v1beta1_UniversityStatus_To_miskatonic_UniversityStatus,
		Convert_miskatonic_UniversityStatus_To_v1beta1_UniversityStatus,
	)
}

func autoConvert_v1beta1_Scale_To_miskatonic_Scale(in *Scale, out *miskatonic.Scale, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Faculty = in.Faculty
	return nil
}

func Convert_v1beta1_Scale_To_miskatonic_Scale(in *Scale, out *miskatonic.Scale, s conversion.Scope) error {
	return autoConvert_v1beta1_Scale_To_miskatonic_Scale(in, out, s)
}

func autoConvert_miskatonic_Scale_To_v1beta1_Scale(in *miskatonic.Scale, out *Scale, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Faculty = in.Faculty
	return nil
}

func Convert_miskatonic_Scale_To_v1beta1_Scale(in *miskatonic.Scale, out *Scale, s conversion.Scope) error {
	return autoConvert_miskatonic_Scale_To_v1beta1_Scale(in, out, s)
}

func autoConvert_v1beta1_ScaleList_To_miskatonic_ScaleList(in *ScaleList, out *miskatonic.ScaleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]miskatonic.Scale)(unsafe.Pointer(&in.Items))
	return nil
}

func Convert_v1beta1_ScaleList_To_miskatonic_ScaleList(in *ScaleList, out *miskatonic.ScaleList, s conversion.Scope) error {
	return autoConvert_v1beta1_ScaleList_To_miskatonic_ScaleList(in, out, s)
}

func autoConvert_miskatonic_ScaleList_To_v1beta1_ScaleList(in *miskatonic.ScaleList, out *ScaleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items == nil {
		out.Items = make([]Scale, 0)
	} else {
		out.Items = *(*[]Scale)(unsafe.Pointer(&in.Items))
	}
	return nil
}

func Convert_miskatonic_ScaleList_To_v1beta1_ScaleList(in *miskatonic.ScaleList, out *ScaleList, s conversion.Scope) error {
	return autoConvert_miskatonic_ScaleList_To_v1beta1_ScaleList(in, out, s)
}

func autoConvert_v1beta1_University_To_miskatonic_University(in *University, out *miskatonic.University, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_UniversitySpec_To_miskatonic_UniversitySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_UniversityStatus_To_miskatonic_UniversityStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func Convert_v1beta1_University_To_miskatonic_University(in *University, out *miskatonic.University, s conversion.Scope) error {
	return autoConvert_v1beta1_University_To_miskatonic_University(in, out, s)
}

func autoConvert_miskatonic_University_To_v1beta1_University(in *miskatonic.University, out *University, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_miskatonic_UniversitySpec_To_v1beta1_UniversitySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_miskatonic_UniversityStatus_To_v1beta1_UniversityStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func Convert_miskatonic_University_To_v1beta1_University(in *miskatonic.University, out *University, s conversion.Scope) error {
	return autoConvert_miskatonic_University_To_v1beta1_University(in, out, s)
}

func autoConvert_v1beta1_UniversityList_To_miskatonic_UniversityList(in *UniversityList, out *miskatonic.UniversityList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]miskatonic.University)(unsafe.Pointer(&in.Items))
	return nil
}

func Convert_v1beta1_UniversityList_To_miskatonic_UniversityList(in *UniversityList, out *miskatonic.UniversityList, s conversion.Scope) error {
	return autoConvert_v1beta1_UniversityList_To_miskatonic_UniversityList(in, out, s)
}

func autoConvert_miskatonic_UniversityList_To_v1beta1_UniversityList(in *miskatonic.UniversityList, out *UniversityList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items == nil {
		out.Items = make([]University, 0)
	} else {
		out.Items = *(*[]University)(unsafe.Pointer(&in.Items))
	}
	return nil
}

func Convert_miskatonic_UniversityList_To_v1beta1_UniversityList(in *miskatonic.UniversityList, out *UniversityList, s conversion.Scope) error {
	return autoConvert_miskatonic_UniversityList_To_v1beta1_UniversityList(in, out, s)
}

func autoConvert_v1beta1_UniversitySpec_To_miskatonic_UniversitySpec(in *UniversitySpec, out *miskatonic.UniversitySpec, s conversion.Scope) error {
	out.FacultySize = in.FacultySize
	out.MaxStudents = (*int)(unsafe.Pointer(in.MaxStudents))
	return nil
}

func Convert_v1beta1_UniversitySpec_To_miskatonic_UniversitySpec(in *UniversitySpec, out *miskatonic.UniversitySpec, s conversion.Scope) error {
	return autoConvert_v1beta1_UniversitySpec_To_miskatonic_UniversitySpec(in, out, s)
}

func autoConvert_miskatonic_UniversitySpec_To_v1beta1_UniversitySpec(in *miskatonic.UniversitySpec, out *UniversitySpec, s conversion.Scope) error {
	out.FacultySize = in.FacultySize
	out.MaxStudents = (*int)(unsafe.Pointer(in.MaxStudents))
	return nil
}

func Convert_miskatonic_UniversitySpec_To_v1beta1_UniversitySpec(in *miskatonic.UniversitySpec, out *UniversitySpec, s conversion.Scope) error {
	return autoConvert_miskatonic_UniversitySpec_To_v1beta1_UniversitySpec(in, out, s)
}

func autoConvert_v1beta1_UniversityStatus_To_miskatonic_UniversityStatus(in *UniversityStatus, out *miskatonic.UniversityStatus, s conversion.Scope) error {
	out.EnrolledStudents = *(*[]string)(unsafe.Pointer(&in.EnrolledStudents))
	out.FacultyEmployed = *(*[]string)(unsafe.Pointer(&in.FacultyEmployed))
	return nil
}

func Convert_v1beta1_UniversityStatus_To_miskatonic_UniversityStatus(in *UniversityStatus, out *miskatonic.UniversityStatus, s conversion.Scope) error {
	return autoConvert_v1beta1_UniversityStatus_To_miskatonic_UniversityStatus(in, out, s)
}

func autoConvert_miskatonic_UniversityStatus_To_v1beta1_UniversityStatus(in *miskatonic.UniversityStatus, out *UniversityStatus, s conversion.Scope) error {
	out.EnrolledStudents = *(*[]string)(unsafe.Pointer(&in.EnrolledStudents))
	out.FacultyEmployed = *(*[]string)(unsafe.Pointer(&in.FacultyEmployed))
	return nil
}

func Convert_miskatonic_UniversityStatus_To_v1beta1_UniversityStatus(in *miskatonic.UniversityStatus, out *UniversityStatus, s conversion.Scope) error {
	return autoConvert_miskatonic_UniversityStatus_To_v1beta1_UniversityStatus(in, out, s)
}
